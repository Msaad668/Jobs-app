{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/profile.js","actions/auth.js","components/layout/Navbar.js","components/layout/Home.js","actions/jobs.js","components/pages/jobs/JobItem.js","components/layout/Spinner.js","components/pages/jobs/Jobs.js","components/pages/profile/UserProfile.js","components/pages/applications/MyApplications.js","reducers/alert.js","reducers/jobs.js","reducers/auth.js","reducers/profile.js","reducers/index.js","store.js","components/layout/Alert.js","components/pages/auth/Login.js","components/pages/auth/SignUpEmployer.js","components/pages/auth/SignUpUser.js","components/pages/jobs/Job.js","components/pages/profile/EmployerProfile.js","components/pages/profile/CompanyInfo.js","components/pages/profile/CreateEmployerProfileForm.js","components/pages/profile/CreateUserProfileForm.js","components/pages/profile/AddExperienceForm.js","components/pages/profile/AddEducationForm.js","components/pages/jobs/JobForm.js","components/pages/jobs/MyJobs.js","components/pages/jobs/EditJobForm.js","components/pages/jobs/Applications.js","components/pages/profile/UserInfo.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","EMPLOYER_REGISTER_SUCCESS","USER_REGISTER_SUCCESS","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT","GET_PROFILE","GET_USER","UPDATE_PROFILE","CLEAR_PROFILE","PROFILE_ERROR","GET_JOBS","FILTER_JOBS","CLEAR_FILTER","GET_JOB","JOB_ERROR","DELETE_APPLICATION","APPLIED_TO_JOB","CREATE_JOB","UPDATE_JOB","DELETE_JOB","GET_APPLICATIONS","PUT_IN_CONSIDERATION","NOT_SELECT","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","getCurrentProfile","a","get","res","data","errors","response","forEach","error","statusText","status","loadUser","localStorage","console","log","connect","state","auth","logout","isAuthenticated","loading","isEmployer","employerLinks","class","to","onClick","className","userLinks","guestLinks","style","fontSize","data-toggle","data-target","aria-controls","aria-expanded","aria-label","background","maxWidth","margin","borderRadius","getJob","jobId","JobItem","job","_id","title","employerName","description","company","split","slice","join","Spinner","width","height","role","jobs","getJobs","filterJobs","text","clearFilter","filtered","useState","setText","useEffect","textAlign","value","onChange","e","target","name","placeholder","length","map","key","profile","user","deleteEducation","delete","deleteExperience","isCompany","minWidth","opacity","bio","location","skills","skill","index","education","color","school","format","moment","utc","from","degree","fieldofstudy","experience","unapplyToJob","job_id","application_id","jobsAppliedTo","application","require","initialState","applications","getItem","userInfo","combineReducers","alert","action","filter","includes","jobsPublished","setItem","removeItem","repos","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","alerts","marginBottom","login","email","password","config","body","post","formData","setFormData","onSubmit","preventDefault","htmlFor","aria-describedby","required","registerEmployer","FormData","password2","registerUser","applyToJob","match","params","boxSizing","locationOfTheJob","disabled","numberOfVacancies","jobRequirements","req","expNeeded","salary","jobType","companyName","yearFounded","website","numberEmployees","getProfileById","userId","border","numberOfEmployees","twitter","facebook","linkedin","instagram","createEmployerProfile","history","edit","push","displaySocialInputs","toggleSocialInputs","profileData","social","Array","isArray","for","createUserProfile","addExperience","put","current","checked","cols","rows","addEducation","createJob","jobUrl","deleteJob","updateJob","jobData","getApplications","putInConsideration","notSelect","getUserProfileById","App","path","exact","component","Home","Jobs","JobForm","MyJobs","UserInfo","Applications","EditJobForm","Job","CompanyInfo","UserProfile","CreateUserProfileForm","MyApplications","AddEducationForm","AddExperienceForm","EmployerProfile","CreateEmployerProfileForm","Login","SignUpEmployer","SignUpUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2da9f9d9.chunk.js","sourcesContent":["export const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const EMPLOYER_REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILED = \"LOGIN_SUCCESS\";\r\n\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\r\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\r\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\r\nexport const GET_JOBS = \"GET_JOBS\";\r\nexport const FILTER_JOBS = \"FILTER_JOBS\";\r\nexport const CLEAR_FILTER = \"CLEAR_FILTER\";\r\nexport const GET_JOB = \"GET_JOB\";\r\nexport const JOB_ERROR = \"JOB_ERROR\";\r\nexport const DELETE_APPLICATION = \"DELETE_APPLICATION\";\r\nexport const APPLIED_TO_JOB = \"APPLIED_TO_JOB\";\r\nexport const CREATE_JOB = \"CREATE_JOB\";\r\nexport const UPDATE_JOB = \"UPDATE_JOB\";\r\nexport const DELETE_JOB = \"DELETE_JOB\";\r\nexport const GET_APPLICATIONS = \"GET_APPLICATIONS\";\r\nexport const PUT_IN_CONSIDERATION = \"PUT_IN_CONSIDERATION\";\r\nexport const NOT_SELECT = \"NOT_SELECT\";\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\n\r\nexport const setAlert = (msg, alertType, timeout = 4500) => (dispatch) => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { id, msg, alertType },\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","import axios from \"axios\";\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, GET_USER } from \"./types\";\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/profile/me\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n// Get profile by ID\r\nexport const getUserProfileById = (userId) => async (dispatch) => {\r\n  console.log(userId);\r\n\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update user profile\r\nexport const createUserProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(\"/api/profile/user\", formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\r\n\r\n    history.push(\"/profile\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n// Create or update employer profile\r\nexport const createEmployerProfile = (\r\n  formData,\r\n  history,\r\n  edit = false\r\n) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(\"/api/profile/employer\", formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\r\n\r\n    history.push(\"/emp-profile\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Added\", \"success\"));\r\n\r\n    history.push(\"/profile\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(\"/api/profile/education\", formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Added\", \"success\"));\r\n\r\n    history.push(\"/profile\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","import {\r\n  USER_LOADED,\r\n  EMPLOYER_REGISTER_SUCCESS,\r\n  USER_REGISTER_SUCCESS,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  AUTH_ERROR,\r\n  CLEAR_PROFILE,\r\n} from \"./types\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { getCurrentProfile } from \"./profile\";\r\n\r\n// load user from token\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"2\", error);\r\n\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// register an employer\r\nexport const registerEmployer = (FormData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"/api/users/employer\",\r\n      FormData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: EMPLOYER_REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n// register a user\r\nexport const registerUser = (FormData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.post(\r\n      \"/api/users\",\r\n      FormData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// login user\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const body = { email, password };\r\n\r\n    const res = await axios.post(\r\n      \"/api/auth\",\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n    dispatch(getCurrentProfile());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    // console.log(\"1\", err);\r\n\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\n// LOG OUT\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_PROFILE,\r\n  });\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/auth\";\r\nconst Navbar = ({ auth: { isAuthenticated, loading, isEmployer }, logout }) => {\r\n  const employerLinks = (\r\n    <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n      <li class=\"nav-item \">\r\n        <Link to=\"/\" class=\"nav-link\">\r\n          Home\r\n        </Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/emp-profile\">\r\n          Profile\r\n        </Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/jobs/myjobs\">\r\n          my jobs\r\n        </Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/jobs/create-job\">\r\n          add job\r\n        </Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/jobs\">\r\n          all jobs\r\n        </Link>\r\n      </li>\r\n\r\n      <li onClick={logout} class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/\">\r\n          <i className=\"fas fa-sign-out-alt\" />{\" \"}\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const userLinks = (\r\n    <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n      <li class=\"nav-item \">\r\n        <Link to=\"/\" class=\"nav-link\">\r\n          Home\r\n        </Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/jobs\">\r\n          jobs\r\n        </Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/profile\">\r\n          Profile\r\n        </Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/my-applications\">\r\n          applications\r\n        </Link>\r\n      </li>\r\n      <li onClick={logout} class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/\">\r\n          <i className=\"fas fa-sign-out-alt\" />{\" \"}\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n      <li class=\"nav-item \">\r\n        <Link to=\"/\" class=\"nav-link\">\r\n          Home\r\n        </Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/jobs\">\r\n          jobs\r\n        </Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/login\">\r\n          login\r\n        </Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/signup/user\">\r\n          Register as user\r\n        </Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/signup/employer\">\r\n          Register as employer\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav class=\"navbar navbar-expand-lg bg-dark navbar-dark\">\r\n      <Link to=\"/\" class=\"navbar-brand\" style={{ fontSize: \"1.5rem\" }}>\r\n        <i className=\"fas fa-address-book\" /> jobs Portal\r\n      </Link>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarTogglerDemo02\"\r\n        aria-controls=\"navbarTogglerDemo02\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n        {!loading && (\r\n          <Fragment>\r\n            {isAuthenticated ? (\r\n              <Fragment>{isEmployer ? employerLinks : userLinks}</Fragment>\r\n            ) : (\r\n              guestLinks\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"user-profile \" style={{ background: \"black\" }}>\r\n      <div class=\"home p-1\">\r\n        <div className=\"container\">\r\n          <h1 class=\"main1\">Jobs Portal</h1>\r\n\r\n          <p class=\"main3\">\r\n            Searching for vacancies and career opportunities? jobs portal helps{\" \"}\r\n            <br /> you in your job search :)\r\n          </p>\r\n\r\n          <Link\r\n            to=\"/jobs\"\r\n            type=\"button\"\r\n            class=\"btn btn-secondary btn-lg btn-block search-button my-3 \"\r\n            style={{\r\n              maxWidth: \"85vh\",\r\n              margin: \"auto\",\r\n              fontSize: \"1.5rem\",\r\n              borderRadius: \"0\",\r\n            }}\r\n          >\r\n            See All Jobs\r\n          </Link>\r\n          <Link\r\n            to=\"/login\"\r\n            type=\"button\"\r\n            class=\"btn btn-primary btn-lg btn-block search-button my-3\"\r\n            style={{\r\n              maxWidth: \"85vh\",\r\n              margin: \"auto\",\r\n              fontSize: \"1.5rem\",\r\n              borderRadius: \"0\",\r\n            }}\r\n          >\r\n            login\r\n          </Link>\r\n          <Link\r\n            to=\"/signup/user\"\r\n            type=\"button\"\r\n            class=\"btn btn-primary btn-lg btn-block search-button my-3\"\r\n            style={{\r\n              maxWidth: \"85vh\",\r\n              margin: \"auto\",\r\n              fontSize: \"1.5rem\",\r\n              borderRadius: \"0\",\r\n            }}\r\n          >\r\n            sign up as a user\r\n          </Link>\r\n          <Link\r\n            to=\"/signup/employer\"\r\n            type=\"button\"\r\n            class=\"btn btn-primary btn-lg btn-block search-button my-3\"\r\n            style={{\r\n              maxWidth: \"85vh\",\r\n              margin: \"auto\",\r\n              fontSize: \"1.5rem\",\r\n              borderRadius: \"0\",\r\n            }}\r\n          >\r\n            sign up as an employer\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, {})(Home);\r\n","import {\r\n  GET_JOBS,\r\n  JOB_ERROR,\r\n  GET_JOB,\r\n  DELETE_APPLICATION,\r\n  APPLIED_TO_JOB,\r\n  CREATE_JOB,\r\n  UPDATE_JOB,\r\n  DELETE_JOB,\r\n  GET_APPLICATIONS,\r\n  PUT_IN_CONSIDERATION,\r\n  NOT_SELECT,\r\n  FILTER_JOBS,\r\n  CLEAR_FILTER,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\n\r\n// Get jobs\r\nexport const getJobs = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/jobs\");\r\n\r\n    dispatch({\r\n      type: GET_JOBS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: JOB_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// filter jobs\r\nexport const filterJobs = (text) => (dispatch) => {\r\n  dispatch({\r\n    type: FILTER_JOBS,\r\n    payload: text,\r\n  });\r\n};\r\n// clear filter jobs\r\nexport const clearFilter = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_FILTER,\r\n  });\r\n};\r\n\r\n// Get a single job\r\nexport const getJob = (jobId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/jobs/${jobId}`);\r\n\r\n    dispatch({\r\n      type: GET_JOB,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n\r\n    dispatch({\r\n      type: JOB_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\n// apply for a job\r\nexport const applyToJob = (id) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(\r\n      `/api/jobs/apply/${id}`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: APPLIED_TO_JOB,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"applied to job succesfully\", \"success\"));\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: JOB_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n// unapply for a job\r\nexport const unapplyToJob = (job_id, application_id) => async (dispatch) => {\r\n  try {\r\n    // const config = {\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json\",\r\n    //   },\r\n    // };\r\n\r\n    await axios.delete(\r\n      `/api/jobs/unapply/${job_id}/${application_id}`\r\n    );\r\n\r\n    dispatch({\r\n      type: DELETE_APPLICATION,\r\n      payload: application_id,\r\n    });\r\n\r\n    dispatch(setAlert(\"application deleted succesfully\", \"success\"));\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: JOB_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\n// create a new job as an employer\r\nexport const createJob = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(\r\n      `/api/jobs`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: CREATE_JOB,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"job created successfully\", \"success\"));\r\n\r\n    history.push(\"/jobs/myjobs\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: JOB_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\n// update a job as an employer\r\nexport const updateJob = (id, formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(\r\n      `/api/jobs/${id}`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_JOB,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"job updated successfully\", \"success\"));\r\n\r\n    history.push(\"/jobs/myjobs\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: JOB_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\n// delete a job\r\nexport const deleteJob = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/jobs/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_JOB,\r\n      payload: id,\r\n    });\r\n\r\n    dispatch(setAlert(\"job deleted successfully\", \"success\"));\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: JOB_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n// get all applications of a job\r\nexport const getApplications = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `/api/jobs/applications/${id}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_APPLICATIONS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: JOB_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\n// put an applicant in consideration\r\nexport const putInConsideration = (jobId, application_id, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(\r\n      `/api/jobs/${jobId}/in_consideration/${application_id}`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PUT_IN_CONSIDERATION,\r\n      payload: res.data.applications,\r\n    });\r\n\r\n    dispatch(\r\n      setAlert(\r\n        \"applicant put in consideration successfully, the applicant will be able to view the job status under his applications section\",\r\n        \"success\",\r\n        6000\r\n      )\r\n    );\r\n\r\n    history.push(`/jobs/myjobs/applications/${jobId}`);\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: JOB_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n// not select ann applicant\r\nexport const notSelect = (jobId, application_id, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(\r\n      `/api/jobs/${jobId}/not_selected/${application_id}`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: NOT_SELECT,\r\n      payload: res.data.applications,\r\n    });\r\n\r\n    dispatch(\r\n      setAlert(\r\n        \"applicant NOT SELECTED successfully, the applicant will be able to view the job status under his applications section\",\r\n        \"warning\",\r\n        6000\r\n      )\r\n    );\r\n\r\n    history.push(`/jobs/myjobs/applications/${jobId}`);\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: JOB_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst JobItem = ({\r\n  job: { _id, title, employerName, description, company },\r\n}) => {\r\n  return (\r\n    <div className=\"profile-wrapper w-75 mx-auto my-3\">\r\n      <div className=\"p-2\">\r\n        <h4 className=\" \">\r\n          <Link\r\n            to={`/job/${_id}`}\r\n            className=\"text-decoration-none font-weight-bolder\"\r\n          >\r\n            {title}\r\n          </Link>\r\n          <small className=\"text-muted\">- 4 days ago</small>\r\n        </h4>\r\n\r\n        <h5>\r\n          <Link\r\n            className=\"text-decoration-none\"\r\n            to={`/company-info/${company}`}\r\n          >\r\n            {employerName}\r\n          </Link>{\" \"}\r\n          - cairo, egypt\r\n        </h5>\r\n        <p>{description.split(\" \").slice(0, 15).join(\" \")} ...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobItem;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div class=\"text-center my-4\">\r\n      <div\r\n        class=\"spinner-border\"\r\n        style={{ width: \"4rem\", height: \"4rem\" }}\r\n        role=\"status\"\r\n      >\r\n        <span class=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useEffect, Fragment } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getJobs, filterJobs, clearFilter } from \"../../../actions/jobs\";\r\nimport JobItem from \"./JobItem\";\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport { useState } from \"react\";\r\n\r\nconst Jobs = ({\r\n  getJobs,\r\n  clearFilter,\r\n  filterJobs,\r\n  jobs: { jobs, loading, filtered },\r\n}) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    clearFilter();\r\n    getJobs();\r\n  }, [getJobs, clearFilter]);\r\n\r\n  return (\r\n    <div class=\"jobs\">\r\n      <div class=\"container padd-1\">\r\n        <h2 class=\"my-4 \" style={{ textAlign: \"center\" }}>\r\n          Explore new opportunities\r\n        </h2>\r\n\r\n        <div className=\"w-75 mx-auto\">\r\n          <input\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            name=\"text\"\r\n            type=\"text\"\r\n            class=\"form-control p-3 my-3\"\r\n            placeholder=\"Search jobs...\"\r\n          />\r\n          <button\r\n            onClick={() => {\r\n              filterJobs(text);\r\n              setText(\"\");\r\n            }}\r\n            type=\"button\"\r\n            class=\"btn btn-secondary btn-lg btn-block my-3\"\r\n          >\r\n            search\r\n          </button>\r\n        </div>\r\n\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <Fragment>\r\n            {filtered.length !== 0 ? (\r\n              filtered.map((job) => <JobItem key={job._id} job={job} />)\r\n            ) : (\r\n              <Fragment>\r\n                {jobs.length !== 0 ? (\r\n                  jobs.map((job) => <JobItem key={job._id} job={job} />)\r\n                ) : (\r\n                  <div style={{ textAlign: \"center\" }}>\r\n                    {\" \"}\r\n                    <h1>no jobs found</h1>{\" \"}\r\n                  </div>\r\n                )}\r\n              </Fragment>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  jobs: state.job,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getJobs, filterJobs, clearFilter })(\r\n  Jobs\r\n);\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  getCurrentProfile,\r\n  deleteEducation,\r\n  deleteExperience,\r\n} from \"../../../actions/profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nconst UserProfile = ({\r\n  user,\r\n  profile,\r\n  getCurrentProfile,\r\n  deleteEducation,\r\n  deleteExperience,\r\n  loading,\r\n  setAlert,\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  if (user && user.isCompany === true) {\r\n    return (\r\n      <div className=\"user-profile\">\r\n        <h1 class=\"text-center  p-4\">not authorized to get a user profile</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loading && !profile) {\r\n    setAlert(\"please create a profile first\", \"success\", 5000);\r\n    return <Redirect to=\"/create-edit-user-profile\" />;\r\n  }\r\n\r\n  return (\r\n    <div class=\"user-profile\">\r\n      <div class=\"container padd-2\">\r\n        {!loading && profile !== null ? (\r\n          <Fragment>\r\n            <h2 class=\"py-2\">welcome {user && user.name}</h2>\r\n\r\n            <div class=\"links py-2\">\r\n              <Link\r\n                to=\"/create-edit-user-profile\"\r\n                type=\"button\"\r\n                class=\"btn btn-success btn-lg my-1 mr-2\"\r\n                style={{ minWidth: \"12rem\", opacity: \".9\" }}\r\n              >\r\n                edit/create profile\r\n              </Link>\r\n              <Link\r\n                to=\"/profile/add-experience\"\r\n                type=\"button\"\r\n                class=\"btn btn-success btn-lg my-1 mr-2\"\r\n                style={{ minWidth: \"12rem\", opacity: \".9\" }}\r\n              >\r\n                add experience\r\n              </Link>\r\n              <Link\r\n                to=\"/profile/add-education\"\r\n                type=\"button\"\r\n                class=\"btn btn-success btn-lg my-1 mr-2\"\r\n                style={{ minWidth: \"12rem\", opacity: \".9\" }}\r\n              >\r\n                add education\r\n              </Link>\r\n            </div>\r\n\r\n            <div class=\"profile-wrapper shadow  my-2\">\r\n              <div class=\"p-4\">\r\n                <h2 class=\"text-center p-2\">main information</h2>\r\n                <h3>Title : {profile.title ? profile.title : \"\"}</h3>\r\n                <hr />\r\n                <h5>\r\n                  <strong> bio : </strong> {profile.bio ? profile.bio : \"\"}\r\n                </h5>\r\n                <hr />\r\n                <h4>location : {profile.location ? profile.location : \"\"}</h4>\r\n                <hr />\r\n                <h4>current employer : the awesome place</h4>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"profile-wrapper shadow  my-3\">\r\n              <div class=\"p-4\">\r\n                <h2 class=\"text-center p-2\">skills</h2>\r\n\r\n                <div class=\"w-75 mx-auto p-1\">\r\n                  {profile.skills.map((skill, index) => (\r\n                    <div key={index} className=\"p-1\">\r\n                      <i className=\"fas fa-check\" />\r\n                      {\"  \"}\r\n                      {skill}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"profile-wrapper shadow  my-3\">\r\n              <div class=\"p-4\">\r\n                <h2 class=\"text-center p-2\">Education</h2>\r\n                {profile.education.length > 0 ? (\r\n                  <Fragment>\r\n                    {profile.education.map((education) => (\r\n                      <div key={education._id}>\r\n                        <h3 style={{ color: \"#0d56d9\", opacity: \".7\" }}>\r\n                          {education.school}\r\n                        </h3>\r\n                        <p>\r\n                          <Moment format=\"YYYY/MM/DD\">\r\n                            {moment.utc(education.from)}\r\n                          </Moment>{\" \"}\r\n                          -{\" \"}\r\n                          {!education.to ? (\r\n                            \" Now\"\r\n                          ) : (\r\n                            <Moment format=\"YYYY/MM/DD\">\r\n                              {moment.utc(education.to)}\r\n                            </Moment>\r\n                          )}\r\n                        </p>\r\n                        <p>\r\n                          <strong>Degree: </strong> {education.degree}\r\n                        </p>\r\n                        <p>\r\n                          <strong>Field Of Study: </strong>{\" \"}\r\n                          {education.fieldofstudy}\r\n                        </p>\r\n                        <p>\r\n                          <strong>Description: </strong> {education.description}\r\n                        </p>\r\n                        <button\r\n                          onClick={() => deleteEducation(education._id)}\r\n                          className=\"btn btn-danger\"\r\n                        >\r\n                          Delete education\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </Fragment>\r\n                ) : (\r\n                  <h4>No education credentials</h4>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"profile-wrapper shadow  my-3\">\r\n              <div class=\"p-4\">\r\n                <h2 class=\"text-center p-2\">Experience</h2>\r\n                {profile.experience.length > 0 ? (\r\n                  <Fragment>\r\n                    {profile.experience.map((experience) => (\r\n                      <div key={experience._id}>\r\n                        <h3 style={{ color: \"#0d56d9\", opacity: \".7\" }}>\r\n                          {experience.company}\r\n                        </h3>\r\n                        <p>\r\n                          <Moment format=\"YYYY/MM/DD\">\r\n                            {moment.utc(experience.from)}\r\n                          </Moment>{\" \"}\r\n                          -{\" \"}\r\n                          {!experience.to ? (\r\n                            \" Now\"\r\n                          ) : (\r\n                            <Moment format=\"YYYY/MM/DD\">\r\n                              {moment.utc(experience.to)}\r\n                            </Moment>\r\n                          )}\r\n                        </p>\r\n                        <p>\r\n                          <strong>Position: </strong> {experience.title}\r\n                        </p>\r\n                        <p>\r\n                          <strong>Location: </strong> {experience.location}\r\n                        </p>\r\n                        <p>\r\n                          <strong>Description: </strong>{\" \"}\r\n                          {experience.description}\r\n                        </p>\r\n                        <button\r\n                          onClick={() => deleteExperience(experience._id)}\r\n                          className=\"btn btn-danger\"\r\n                        >\r\n                          Delete experience\r\n                        </button>\r\n                        <hr />\r\n                      </div>\r\n                    ))}\r\n                  </Fragment>\r\n                ) : (\r\n                  <h4>No experience credentials</h4>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile.profile,\r\n  loading: state.profile.loading,\r\n  user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCurrentProfile,\r\n  deleteEducation,\r\n  deleteExperience,\r\n  setAlert,\r\n})(UserProfile);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport { unapplyToJob } from \"../../../actions/jobs\";\r\n\r\nconst MyApplications = ({ user, loading, unapplyToJob }) => {\r\n  if (loading) {\r\n    return (\r\n      <div className=\"user-profile p-1\">\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-profile p-1\">\r\n      <div className=\"container\">\r\n        <h1 className=\"large text-primary padd-2  text-center\">\r\n          Your applications\r\n        </h1>\r\n\r\n        {user.jobsAppliedTo.map((job) => {\r\n          let color = \"light\";\r\n          if (job.status === \"In consideration\") {\r\n            color = \"success\";\r\n          } else if (job.status === \"not selected\") {\r\n            color = \"danger\";\r\n          }\r\n          return (\r\n            <div key={job._id} className=\"profile-wrapper my-2\">\r\n              <div className=\"padd-2\">\r\n                <h3 className=\"text-primary margin-1\">\r\n                  <Link to={`/job/${job.job}`}>{job.title}</Link>\r\n                </h3>\r\n                <h5 className=\" margin-1\">{job.employerName}</h5>\r\n                <h4 className=\"margin-1\">\r\n                  status:{\" \"}\r\n                  <span class={`badge badge-${color}`}> {job.status}</span>\r\n                </h4>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-secondary btn-lg marginleft-1\"\r\n                  onClick={() => unapplyToJob(job.job, job.application)}\r\n                >\r\n                  withdraw application\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  loading: state.auth.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { unapplyToJob })(MyApplications);\r\n","const { REMOVE_ALERT, SET_ALERT } = require(\"../actions/types\");\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { payload, type } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_JOBS,\r\n  JOB_ERROR,\r\n  GET_JOB,\r\n  GET_APPLICATIONS,\r\n  PUT_IN_CONSIDERATION,\r\n  NOT_SELECT,\r\n  FILTER_JOBS,\r\n  CLEAR_FILTER,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  jobs: [],\r\n  job: null,\r\n  loading: true,\r\n  error: {},\r\n  applications: [],\r\n  filtered: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_JOBS:\r\n      return {\r\n        ...state,\r\n        jobs: payload,\r\n        loading: false,\r\n      };\r\n    case FILTER_JOBS:\r\n      return {\r\n        ...state,\r\n        filtered: state.jobs.filter((job) =>\r\n          job.title.includes(payload) ? true : false\r\n        ),\r\n        loading: false,\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: [],\r\n      };\r\n    case GET_APPLICATIONS:\r\n      return {\r\n        ...state,\r\n        applications: payload,\r\n        loading: false,\r\n      };\r\n    case PUT_IN_CONSIDERATION:\r\n    case NOT_SELECT:\r\n      return {\r\n        ...state,\r\n        applications: payload,\r\n        loading: false,\r\n      };\r\n    case GET_JOB:\r\n      return {\r\n        ...state,\r\n        job: payload,\r\n        loading: false,\r\n      };\r\n    case JOB_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  EMPLOYER_REGISTER_SUCCESS,\r\n  USER_REGISTER_SUCCESS,\r\n  DELETE_APPLICATION,\r\n  APPLIED_TO_JOB,\r\n  CREATE_JOB,\r\n  DELETE_JOB,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  isEmployer: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n        isEmployer: payload.isCompany,\r\n      };\r\n    case DELETE_APPLICATION:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: {\r\n          ...state.user,\r\n          jobsAppliedTo: state.user.jobsAppliedTo.filter(\r\n            (job) => job.application !== payload\r\n          ),\r\n        },\r\n      };\r\n    case DELETE_JOB:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: {\r\n          ...state.user,\r\n          jobsPublished: state.user.jobsPublished.filter(\r\n            (job) => job.job !== payload\r\n          ),\r\n        },\r\n      };\r\n    case APPLIED_TO_JOB:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: {\r\n          ...state.user,\r\n          jobsAppliedTo: payload,\r\n        },\r\n      };\r\n    case CREATE_JOB:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: {\r\n          ...state.user,\r\n          jobsPublished: payload,\r\n        },\r\n      };\r\n    // case UPDATE_JOB:\r\n    //   return {\r\n    //     ...state,\r\n    //     isAuthenticated: true,\r\n    //     loading: false,\r\n    //     user: {\r\n    //       ...state.user,\r\n    //       jobsPublished: state.user.jobsPublished.map((job) => {\r\n    //         if (job.job === payload.job) {\r\n    //           job.title = payload.title;\r\n    //         }\r\n    //       }),\r\n    //     },\r\n    //   };\r\n    case EMPLOYER_REGISTER_SUCCESS:\r\n      if (payload.token) {\r\n        localStorage.setItem(\"token\", payload.token);\r\n      }\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        isEmployer: true,\r\n        loading: false,\r\n      };\r\n    case USER_REGISTER_SUCCESS:\r\n      if (payload.token) {\r\n        localStorage.setItem(\"token\", payload.token);\r\n      }\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        isEmployer: false,\r\n        loading: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      if (payload.token) {\r\n        localStorage.setItem(\"token\", payload.token);\r\n      }\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n\r\n        loading: false,\r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        isEmployer: false,\r\n        user: null,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_USER,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  userInfo: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        userInfo: payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n        profile: null,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport job from \"./jobs\";\r\nimport auth from \"./auth\";\r\nimport profile from \"./profile\";\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  job,\r\n  auth,\r\n  profile,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div\r\n      key={alert.id}\r\n      class={` mx-auto  alert alert-${alert.alertType}`}\r\n      role=\"alert\"\r\n      style={{ marginBottom: \"0px\" }}\r\n    >\r\n      <p class=\"marginleft-3\" style={{ fontSize: \"1.3rem\" }}>\r\n        - {alert.msg}\r\n      </p>\r\n    </div>\r\n  ));\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Alert);\r\n","import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../../actions/auth\";\r\nimport { useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/jobs\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form className=\"container my-5\">\r\n        <div\r\n          className=\"mx-auto login\"\r\n          style={{ maxWidth: \"600px\", fontSize: \"1.5rem\" }}\r\n        >\r\n          <div className=\"p-4\">\r\n            <h3\r\n              className=\"my-2\"\r\n              style={{ textAlign: \"center\", color: \"darkblue\" }}\r\n            >\r\n              Login\r\n            </h3>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                aria-describedby=\"emailHelp\"\r\n                value={email}\r\n                onChange={onChange}\r\n                name=\"email\"\r\n                placeholder=\"Enter email...\"\r\n                required\r\n              />\r\n              <small\r\n                id=\"emailHelp\"\r\n                style={{ fontSize: \"1rem\" }}\r\n                className=\"form-text text-muted\"\r\n              >\r\n                We'll never share your email with anyone else.\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder=\"Password...\"\r\n                value={password}\r\n                name=\"password\"\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </div>\r\n            <button\r\n              onClick={onSubmit}\r\n              type=\"submit\"\r\n              style={{ fontSize: \"1.2rem\" }}\r\n              className=\"btn btn-primary btn-block search-button my-4\"\r\n            >\r\n              Submit\r\n            </button>\r\n            <p className=\"my-1\" style={{ fontSize: \"1rem\" }}>\r\n              Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </p>\r\n            <Link\r\n              to=\"/\"\r\n              type=\"button\"\r\n              style={{ fontSize: \"1.2rem\" }}\r\n              className=\"btn btn-success btn-block search-button my-3\"\r\n            >\r\n              back to Homepage\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Fragment } from \"react\";\r\nimport { registerEmployer } from \"../../../actions/auth\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\nimport { useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SignUpEmployer = ({ isAuthenticated, setAlert, registerEmployer }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert(\"passwords do not match\", \"danger\");\r\n    } else {\r\n      registerEmployer({ name, email, password });\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/jobs\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form className=\"container my-5\">\r\n        <div\r\n          className=\"mx-auto login\"\r\n          style={{ maxWidth: \"600px\", fontSize: \"1.5rem\" }}\r\n        >\r\n          <div className=\"p-4\">\r\n            <h3\r\n              className=\"my-2\"\r\n              style={{ textAlign: \"center\", color: \"darkblue\" }}\r\n            >\r\n              sign up as an employer\r\n            </h3>\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"employerNmae\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter your name...\"\r\n                value={name}\r\n                onChange={onChange}\r\n                name=\"name\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                aria-describedby=\"emailHelp\"\r\n                placeholder=\"Enter email...\"\r\n                value={email}\r\n                onChange={onChange}\r\n                name=\"email\"\r\n                required\r\n              />\r\n              <small\r\n                id=\"emailHelp\"\r\n                style={{ fontSize: \"1rem\" }}\r\n                className=\"form-text text-muted\"\r\n              >\r\n                We'll never share your email with anyone else.\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={onChange}\r\n                name=\"password\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputPassword1\">confirm password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder=\"Password\"\r\n                value={password2}\r\n                onChange={onChange}\r\n                name=\"password2\"\r\n                required\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              style={{ fontSize: \"1.2rem\" }}\r\n              className=\"btn btn-primary btn-block search-button my-4\"\r\n              onClick={onSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n            <Link\r\n              to=\"/\"\r\n              type=\"button\"\r\n              style={{ fontSize: \"1.2rem\" }}\r\n              className=\"btn btn-success btn-block search-button my-3\"\r\n            >\r\n              back to Homepage\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, registerEmployer })(\r\n  SignUpEmployer\r\n);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { registerUser } from \"../../../actions/auth\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nconst SignUpUser = ({ isAuthenticated, setAlert, registerUser }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert(\"passwords do not match\", \"danger\");\r\n    } else {\r\n      registerUser({ name, email, password });\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/jobs\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form className=\"container my-5\">\r\n        <div\r\n          className=\"mx-auto login\"\r\n          style={{ maxWidth: \"600px\", fontSize: \"1.5rem\" }}\r\n        >\r\n          <div className=\"p-4\">\r\n            <h3\r\n              className=\"my-2\"\r\n              style={{ textAlign: \"center\", color: \"darkblue\" }}\r\n            >\r\n              sign up as a job seeker\r\n            </h3>\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"employerNmae\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter your name...\"\r\n                value={name}\r\n                onChange={onChange}\r\n                name=\"name\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                aria-describedby=\"emailHelp\"\r\n                placeholder=\"Enter email...\"\r\n                value={email}\r\n                onChange={onChange}\r\n                name=\"email\"\r\n                required\r\n              />\r\n              <small\r\n                id=\"emailHelp\"\r\n                style={{ fontSize: \"1rem\" }}\r\n                className=\"form-text text-muted\"\r\n              >\r\n                We'll never share your email with anyone else.\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={onChange}\r\n                name=\"password\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputPassword1\">confirm password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder=\"Password\"\r\n                value={password2}\r\n                onChange={onChange}\r\n                name=\"password2\"\r\n                required\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              style={{ fontSize: \"1.2rem\" }}\r\n              className=\"btn btn-primary btn-block search-button my-4\"\r\n              onClick={onSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n            <Link\r\n              to=\"/\"\r\n              type=\"button\"\r\n              style={{ fontSize: \"1.2rem\" }}\r\n              className=\"btn btn-success btn-block search-button my-3\"\r\n            >\r\n              back to Homepage\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, registerUser })(SignUpUser);\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { getJob, applyToJob } from \"../../../actions/jobs\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nconst Job = ({\r\n  job: { job, loading },\r\n  getJob,\r\n  applyToJob,\r\n  match,\r\n\r\n  isEmployer,\r\n  isAuthenticated,\r\n  setAlert,\r\n}) => {\r\n  useEffect(() => {\r\n    getJob(match.params.id);\r\n  }, [getJob, match.params.id]);\r\n\r\n  return (\r\n    <div class=\"single-job-page padd-2\" style={{ boxSizing: \"border-box\" }}>\r\n      {!loading && job !== null ? (\r\n        <Fragment>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-8\">\r\n              <div className=\"profile-wrapper  \">\r\n                <div className=\"padd-2\" style={{ fontSize: \"1.5rem\" }}>\r\n                  <p>{job.title}</p>\r\n                  <Link\r\n                    to={`/company-info/${job.company}`}\r\n                    className=\"text-decoration-none\"\r\n                  >\r\n                    {job.employerName}\r\n                  </Link>\r\n                  <p className=\"text-muted\">{job.locationOfTheJob}</p>\r\n                  <hr />\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-8\">\r\n                      <button\r\n                        type=\"button\"\r\n                        style={{ fontSize: \"1.4rem\", minWidth: \"25vh\" }}\r\n                        className={`btn btn-success `}\r\n                        onClick={() =>\r\n                          !isAuthenticated\r\n                            ? setAlert(\r\n                                \"you have to login/register as a user first\",\r\n                                \"danger\",\r\n                                5000\r\n                              )\r\n                            : applyToJob(job._id)\r\n                        }\r\n                        disabled={isEmployer}\r\n                      >\r\n                        Apply for job\r\n                      </button>\r\n                      <br />\r\n                      {isEmployer ? (\r\n                        <small style={{ fontSize: \".9rem\" }}>\r\n                          you have to login as a user to apply\r\n                        </small>\r\n                      ) : null}\r\n\r\n                      <br />\r\n                    </div>\r\n                    <div\r\n                      class=\"col-sm-4 m-1\"\r\n                      style={{ fontSize: \"1.1rem\", maxWidth: \"16rem\" }}\r\n                    >\r\n                      <p>\r\n                        {job.applications.length} applicants for{\" \"}\r\n                        {job.numberOfVacancies} open{\" \"}\r\n                        {job.numberOfVacancies > 1 ? \"positions\" : \"position\"}{\" \"}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"profile-wrapper  my-2 \">\r\n                <div className=\"padd-2\">\r\n                  <h2 class=\"\">About the job:</h2>\r\n                  <p style={{ fontSize: \"1.2rem\" }}>{job.description}</p>\r\n                  <hr />\r\n                  <h2>job requirements:</h2>\r\n                  <ul style={{ fontSize: \"1.2rem\" }}>\r\n                    {job.jobRequirements.map((req) => {\r\n                      return <li>{req}</li>;\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4\">\r\n              <div className=\"profile-wrapper\">\r\n                <div className=\"padd-2\" style={{ fontSize: \"1.1rem\" }}>\r\n                  <p>Experience needed : {job.expNeeded}</p>\r\n                  <hr />\r\n                  <p>salary : {job.salary}</p>\r\n                  <hr />\r\n                  <p>jobType : {job.jobType}</p>\r\n                  <hr />\r\n                  <p>vacancies : {job.numberOfVacancies}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  job: state.job,\r\n\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  isEmployer: state.auth.isEmployer,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getJob, applyToJob, setAlert })(Job);\r\n","import React, { Fragment } from \"react\";\r\nimport { getCurrentProfile } from \"../../../actions/profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nconst EmployerProfile = ({\r\n  user,\r\n  profile,\r\n  getCurrentProfile,\r\n  loading,\r\n  setAlert,\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  if (user && user.isCompany === false) {\r\n    return (\r\n      <div className=\"user-profile\">\r\n        <h1 class=\"text-center  p-4\">\r\n          not authorized to get an employer profile\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loading && !profile) {\r\n    setAlert(\"please create a profile first\", \"success\", 5000);\r\n    return <Redirect to=\"/create-edit-employer-profile\" />;\r\n  }\r\n\r\n  return (\r\n    <div class=\"single-job-page padd-2\" style={{ boxSizing: \"border-box\" }}>\r\n      {!loading && profile !== null ? (\r\n        <Fragment>\r\n          <div className=\"profile-wrapper marginbottom-1 mr-1 \">\r\n            <h2 class=\"padd-1\">welcome {user && user.name}</h2>\r\n\r\n            <div class=\"links padd-1 \">\r\n              <Link\r\n                to=\"/create-edit-employer-profile\"\r\n                type=\"button\"\r\n                class=\"btn btn-success btn-lg mx-1 my-1\"\r\n              >\r\n                {profile.companyName ? \"edit\" : \"create\"} profile\r\n              </Link>\r\n              <Link\r\n                to=\"/jobs/create-job\"\r\n                type=\"button\"\r\n                class=\"btn btn-success btn-lg mx-1 my-1\"\r\n              >\r\n                add new job\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-8\">\r\n              <div className=\"profile-wrapper  mr-1\">\r\n                <div className=\"padd-2\" style={{ fontSize: \"1.5rem\" }}>\r\n                  <h3 class=\"py-1\">company name: {profile.companyName}</h3>\r\n                  <hr />\r\n                  <p className=\"\">location: {profile.location}</p>\r\n                  <hr />\r\n                  <p>bio: {profile.bio}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"profile-wrapper  margintop-1 mr-1\">\r\n                <div className=\"padd-2\">\r\n                  <h3>jobs published:</h3>\r\n                  {user.jobsPublished.map((job) => {\r\n                    return <h3>{job.title}</h3>;\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4\">\r\n              <div className=\"profile-wrapper mr-1\">\r\n                <div className=\"padd-2\" style={{ fontSize: \"1.1rem\" }}>\r\n                  <p>year founded : {profile.yearFounded}</p>\r\n                  <hr />\r\n                  <p>website : {profile.website}</p>\r\n                  <hr />\r\n                  <p>number of employees : {profile.numberEmployees}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile.profile,\r\n  loading: state.profile.loading,\r\n  user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, setAlert })(\r\n  EmployerProfile\r\n);\r\n","import React, { Fragment } from \"react\";\r\nimport { getProfileById } from \"../../../actions/profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CompanyInfo = ({ profile, getProfileById, loading, match }) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <div class=\"single-job-page padd-2\" style={{ boxSizing: \"border-box\" }}>\r\n      {!loading && profile !== null ? (\r\n        <Fragment>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-8\">\r\n              <div className=\"profile-wrapper my-2 mr-1\">\r\n                <div className=\"padd-2\" style={{ fontSize: \"1.5rem\" }}>\r\n                  <p class=\"py-1\"> {profile.companyName}</p>\r\n                  <hr />\r\n                  <p className=\"\">location: {profile.location}</p>\r\n                  <hr />\r\n                  <p>bio: {profile.bio}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"profile-wrapper  my-1 mr-1\">\r\n                <div className=\"padd-2\">\r\n                  <h2 class=\"mb-3\">jobs published:</h2>\r\n                  {profile.user.jobsPublished.map((job) => {\r\n                    return (\r\n                      <div\r\n                        className=\"p-2 my-2\"\r\n                        style={{\r\n                          border: \"1px solid darkgray\",\r\n                          borderRadius: \"1rem\",\r\n                        }}\r\n                      >\r\n                        <h3>\r\n                          <Link\r\n                            to={`/job/${job.job}`}\r\n                            className=\"text-decoration-none font-weight-bolder \"\r\n                          >\r\n                            {job.title}\r\n                          </Link>\r\n                        </h3>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4\">\r\n              <div className=\"profile-wrapper my-1 mr-1\">\r\n                <div className=\"padd-2\" style={{ fontSize: \"1.1rem\" }}>\r\n                  <p>year founded : {profile.yearFounded}</p>\r\n                  <hr />\r\n                  <p>website : {profile.website}</p>\r\n                  <hr />\r\n                  <p>number of employees : {profile.numberOfEmployees}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile.profile,\r\n  loading: state.profile.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(CompanyInfo);\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createEmployerProfile,\r\n  getCurrentProfile,\r\n} from \"../../../actions/profile\";\r\n\r\nconst initialState = {\r\n  companyName: \"\",\r\n  website: \"\",\r\n  location: \"\",\r\n  yearFounded: \"\",\r\n  numberEmployees: \"\",\r\n  bio: \"\",\r\n  twitter: \"\",\r\n  facebook: \"\",\r\n  linkedin: \"\",\r\n  instagram: \"\",\r\n};\r\n\r\nconst CreateEmployerProfileForm = ({\r\n  profile: { profile, loading },\r\n  createEmployerProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!profile) getCurrentProfile();\r\n    if (!loading && profile) {\r\n      const profileData = { ...initialState };\r\n      for (const key in profile) {\r\n        if (key in profileData) profileData[key] = profile[key];\r\n      }\r\n      for (const key in profile.social) {\r\n        if (key in profileData) profileData[key] = profile.social[key];\r\n      }\r\n      if (Array.isArray(profileData.skills))\r\n        profileData.skills = profileData.skills.join(\", \");\r\n      setFormData(profileData);\r\n    }\r\n  }, [loading, getCurrentProfile, profile]);\r\n\r\n  const {\r\n    companyName,\r\n    website,\r\n    location,\r\n    yearFounded,\r\n    numberEmployees,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createEmployerProfile(formData, history, profile ? true : false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"container\r\n      \"\r\n      >\r\n        <h1 className=\"large text-primary\">create/Edit Your Profile</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-user\" /> Add some changes to your profile\r\n        </p>\r\n        <small>* = required field</small>\r\n        <hr />\r\n        <form className=\"form\" onSubmit={onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">company name*</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Company name...\"\r\n              name=\"companyName\"\r\n              value={companyName}\r\n              onChange={onChange}\r\n              class=\"form-control\"\r\n              required\r\n            />\r\n            <small className=\"form-text\">\r\n              enter the company or the startup name\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">website</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Website\"\r\n              name=\"website\"\r\n              value={website}\r\n              onChange={onChange}\r\n            />\r\n            <small className=\"form-text\">\r\n              Could be your own or a company website\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">address*</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"your Location...\"\r\n              name=\"location\"\r\n              value={location}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">\r\n              City and country suggested (eg. cairo, egypt)\r\n            </small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">number of employees*</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"number of employees\"\r\n              name=\"numberEmployees\"\r\n              value={numberEmployees}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">eg. 51-100 || 1000-5001</small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">year founded*</label>\r\n            <input\r\n              type=\"number\"\r\n              class=\"form-control\"\r\n              placeholder=\"year founded\"\r\n              name=\"yearFounded\"\r\n              value={yearFounded}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">eg. 2009</small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">summary || bio*</label>\r\n            <textarea\r\n              placeholder=\"A bio of the company...\"\r\n              class=\"form-control\"\r\n              name=\"bio\"\r\n              value={bio}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">\r\n              enter a summary of your company...\r\n            </small>\r\n          </div>\r\n\r\n          <div className=\"my-2\">\r\n            <button\r\n              onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n              type=\"button\"\r\n              className=\"btn btn-light\"\r\n            >\r\n              Add Social Network Links\r\n            </button>\r\n            <span>Optional</span>\r\n          </div>\r\n\r\n          {displaySocialInputs && (\r\n            <Fragment>\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-twitter fa-2x\" />\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"Twitter URL\"\r\n                  name=\"twitter\"\r\n                  value={twitter}\r\n                  onChange={onChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-facebook fa-2x\" />\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"Facebook URL\"\r\n                  name=\"facebook\"\r\n                  value={facebook}\r\n                  onChange={onChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-linkedin fa-2x\" />\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"Linkedin URL\"\r\n                  name=\"linkedin\"\r\n                  value={linkedin}\r\n                  onChange={onChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-instagram fa-2x\" />\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"Instagram URL\"\r\n                  name=\"instagram\"\r\n                  value={instagram}\r\n                  onChange={onChange}\r\n                />\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n\r\n          <input type=\"submit\" className=\"btn btn-primary btn-lg m-1\" />\r\n          <Link className=\"btn btn-success btn-lg m-1\" to=\"/emp-profile\">\r\n            Go Back\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n// CreateEmployerProfileForm.propTypes = {\r\n//   createEmployerProfile: PropTypes.func.isRequired,\r\n//   getCurrentProfile: PropTypes.func.isRequired,\r\n//   profile: PropTypes.object.isRequired,\r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  createEmployerProfile,\r\n  getCurrentProfile,\r\n})(CreateEmployerProfileForm);\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { createUserProfile, getCurrentProfile } from \"../../../actions/profile\";\r\n\r\nconst initialState = {\r\n  companyName: \"\",\r\n  title: \"\",\r\n  website: \"\",\r\n  location: \"\",\r\n  skills: \"\",\r\n  bio: \"\",\r\n  twitter: \"\",\r\n  facebook: \"\",\r\n  linkedin: \"\",\r\n  instagram: \"\",\r\n};\r\n\r\nconst CreateUserProfileForm = ({\r\n  profile: { profile, loading },\r\n  createUserProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!profile) getCurrentProfile();\r\n    if (!loading && profile) {\r\n      const profileData = { ...initialState };\r\n      for (const key in profile) {\r\n        if (key in profileData) profileData[key] = profile[key];\r\n      }\r\n      for (const key in profile.social) {\r\n        if (key in profileData) profileData[key] = profile.social[key];\r\n      }\r\n      if (Array.isArray(profileData.skills))\r\n        profileData.skills = profileData.skills.join(\", \");\r\n      setFormData(profileData);\r\n    }\r\n  }, [loading, getCurrentProfile, profile]);\r\n\r\n  const {\r\n    companyName,\r\n    website,\r\n    location,\r\n    title,\r\n    skills,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createUserProfile(formData, history, profile ? true : false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"container\r\n      \"\r\n      >\r\n        <h1 className=\"large text-primary\">Create/Edit Your Profile</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-user\" /> Add some changes to your profile\r\n        </p>\r\n        <small>* = required field</small>\r\n        <hr />\r\n        <form className=\"form\" onSubmit={onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">title*</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"title*\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">eg. mechanical engineer</small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">summary || bio*</label>\r\n            <textarea\r\n              placeholder=\"a little aboyt yourself*\"\r\n              class=\"form-control\"\r\n              name=\"bio\"\r\n              value={bio}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">\r\n              enter a summary of your company...\r\n            </small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">current company*</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"your current company...*\"\r\n              name=\"companyName\"\r\n              value={companyName}\r\n              onChange={onChange}\r\n              class=\"form-control\"\r\n              required\r\n            />\r\n            <small className=\"form-text\">\r\n              enter your company or the startup name\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">website</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Website\"\r\n              name=\"website\"\r\n              value={website}\r\n              onChange={onChange}\r\n            />\r\n            <small className=\"form-text\">\r\n              Could be your own or a company website\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">address*</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Location\"\r\n              name=\"location\"\r\n              value={location}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">\r\n              City and country suggested (eg. cairo, egypt)\r\n            </small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">skills*</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Skills...\"\r\n              name=\"skills\"\r\n              value={skills}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">\r\n              Please use comma separated values (eg. HTML,CSS,JavaScript,PHP) -\r\n              add at least 1 skills\r\n            </small>\r\n          </div>\r\n\r\n          <div className=\"my-2\">\r\n            <button\r\n              onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n              type=\"button\"\r\n              className=\"btn btn-light\"\r\n            >\r\n              Add Social Network Links\r\n            </button>\r\n            <span>Optional</span>\r\n          </div>\r\n\r\n          {displaySocialInputs && (\r\n            <Fragment>\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-twitter fa-2x\" />\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"Twitter URL\"\r\n                  name=\"twitter\"\r\n                  value={twitter}\r\n                  onChange={onChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-facebook fa-2x\" />\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"Facebook URL\"\r\n                  name=\"facebook\"\r\n                  value={facebook}\r\n                  onChange={onChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-linkedin fa-2x\" />\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"Linkedin URL\"\r\n                  name=\"linkedin\"\r\n                  value={linkedin}\r\n                  onChange={onChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-instagram fa-2x\" />\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"Instagram URL\"\r\n                  name=\"instagram\"\r\n                  value={instagram}\r\n                  onChange={onChange}\r\n                />\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n\r\n          <input type=\"submit\" className=\"btn btn-primary btn-lg m-1\" />\r\n          <Link className=\"btn btn-success btn-lg m-1\" to=\"/profile\">\r\n            Go Back\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n// CreateEmployerProfileForm.propTypes = {\r\n//   createEmployerProfile: PropTypes.func.isRequired,\r\n//   getCurrentProfile: PropTypes.func.isRequired,\r\n//   profile: PropTypes.object.isRequired,\r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  createUserProfile,\r\n  getCurrentProfile,\r\n})(CreateUserProfileForm);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { addExperience } from \"../../../actions/profile\";\r\n\r\nconst AddExperienceForm = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    title: \"\",\r\n    location: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\",\r\n  });\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <h1 className=\"large text-primary\">Add An Experience</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-code-branch\" /> Add any positions that you have\r\n          had in the past\r\n        </p>\r\n        <small>* = required field</small>\r\n        <form\r\n          className=\"form\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            addExperience(formData, history);\r\n          }}\r\n        >\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"* Job Title\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"* Company\"\r\n              name=\"company\"\r\n              value={company}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Location\"\r\n              name=\"location\"\r\n              value={location}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <h4>From Date</h4>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              name=\"from\"\r\n              value={from}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <p>\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"current\"\r\n                checked={current}\r\n                value={current}\r\n                onChange={() => {\r\n                  setFormData({ ...formData, current: !current });\r\n                }}\r\n              />{\" \"}\r\n              Current Job\r\n            </p>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <h4>To Date</h4>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              name=\"to\"\r\n              value={to}\r\n              onChange={onChange}\r\n              disabled={current}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              name=\"description\"\r\n              className=\"form-control\"\r\n              cols=\"30\"\r\n              rows=\"5\"\r\n              placeholder=\"Job Description\"\r\n              value={description}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n          <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n            Go Back\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { addExperience })(AddExperienceForm);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addEducation } from \"../../../actions/profile\";\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: \"\",\r\n    degree: \"\",\r\n    fieldofstudy: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\",\r\n  });\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    description,\r\n    current,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <h1 className=\"large text-primary\">Add Your Education</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-code-branch\" /> Add any school or university that\r\n          you have attended\r\n        </p>\r\n        <small>* = required field</small>\r\n        <form\r\n          className=\"form\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            addEducation(formData, history);\r\n          }}\r\n        >\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"* School or Bootcamp\"\r\n              name=\"school\"\r\n              value={school}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"* Degree or Certificate\"\r\n              name=\"degree\"\r\n              value={degree}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Field of Study\"\r\n              name=\"fieldofstudy\"\r\n              value={fieldofstudy}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <h4>From Date</h4>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              name=\"from\"\r\n              value={from}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <p>\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"current\"\r\n                checked={current}\r\n                value={current}\r\n                onChange={() =>\r\n                  setFormData({ ...formData, current: !formData.current })\r\n                }\r\n              />{\" \"}\r\n              Current School\r\n            </p>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <h4>To Date</h4>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              name=\"to\"\r\n              value={to}\r\n              onChange={onChange}\r\n              disabled={current}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              name=\"description\"\r\n              className=\"form-control\"\r\n              cols=\"30\"\r\n              rows=\"5\"\r\n              placeholder=\"Program Description\"\r\n              value={description}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary btn-lg m-1\" />\r\n          <Link className=\"btn btn-success btn-lg m-1\" to=\"/jobs\">\r\n            Go Back\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(AddEducation);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { createJob } from \"../../../actions/jobs\";\r\n\r\nconst JobForm = ({ createJob, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    jobUrl: \"\",\r\n    jobRequirements: \"\",\r\n    expNeeded: \"\",\r\n    jobType: \"\",\r\n    numberOfVacancies: \"\",\r\n    salary: \"\",\r\n    locationOfTheJob: \"\",\r\n  });\r\n\r\n  const {\r\n    title,\r\n    description,\r\n    jobUrl,\r\n    jobRequirements,\r\n    expNeeded,\r\n    jobType,\r\n    numberOfVacancies,\r\n    salary,\r\n    locationOfTheJob,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <h1 className=\"large text-primary\">Add a new job</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-code-branch\" /> please fill in the following\r\n          inputs\r\n        </p>\r\n        <small>* = required field</small>\r\n        <hr />\r\n        <form\r\n          className=\"form\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            createJob(formData, history);\r\n          }}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label>title*</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"* title...\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">.eg electrical engineer</small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>years of experience*</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"* years of experience needed\"\r\n              name=\"expNeeded\"\r\n              value={expNeeded}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">.eg more than 2 years</small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>job type*</label>\r\n            <select\r\n              class=\"form-control\"\r\n              name=\"jobType\"\r\n              value={jobType}\r\n              onChange={onChange}\r\n              required\r\n            >\r\n              <option>* select job type</option>\r\n              <option value=\"full time\">Full time</option>\r\n              <option value=\"part time\">part time</option>\r\n              <option value=\"work from home\">work from home</option>\r\n            </select>\r\n            <small className=\"form-text\">\r\n              * required, please choose the job Type\r\n            </small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>job url</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"job url...\"\r\n              name=\"jobUrl\"\r\n              value={jobUrl}\r\n              onChange={onChange}\r\n            />\r\n            <small className=\"form-text\">.eg www.orascom.com</small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>location of the job*</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"* location of the job\"\r\n              name=\"locationOfTheJob\"\r\n              value={locationOfTheJob}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">.eg nasr city, cairo</small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>number of vacancies*</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"number of vacancies...\"\r\n              name=\"numberOfVacancies\"\r\n              value={numberOfVacancies}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>salary</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"salary...\"\r\n              name=\"salary\"\r\n              value={salary}\r\n              onChange={onChange}\r\n            />\r\n            <small className=\"form-text\">.eg 8000 egp</small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>jobRequirements*</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"job requirements...\"\r\n              name=\"jobRequirements\"\r\n              value={jobRequirements}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">\r\n              you have to use '/' separated values (eg. good grasp on javascript\r\n              / hard worker / etc)\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>description*</label>\r\n            <textarea\r\n              name=\"description\"\r\n              className=\"form-control\"\r\n              cols=\"30\"\r\n              rows=\"5\"\r\n              placeholder=\"job description...\"\r\n              value={description}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary btn-lg m-1\" />\r\n          <Link className=\"btn btn-success btn-lg my-1\" to=\"/jobs\">\r\n            Go Back\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { createJob })(JobForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport { getJob, deleteJob } from \"../../../actions/jobs\";\r\nimport { useEffect } from \"react\";\r\nimport { loadUser } from \"../../../actions/auth\";\r\n\r\nconst MyJobs = ({ user, loading, getJob, loadUser, deleteJob }) => {\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, [loadUser]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"user-profile p-1\">\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-profile p-1\">\r\n      <div className=\"container\">\r\n        <h1 className=\"large text-primary padd-2  text-center\">\r\n          jobs you have published\r\n        </h1>\r\n\r\n        {user.jobsPublished.map((job) => {\r\n          return (\r\n            <div key={job._id} className=\"profile-wrapper my-2\">\r\n              <div className=\"padd-2\">\r\n                <h3 className=\"text-primary margin-1\">\r\n                  <Link to={`/job/${job.job}`}>{job.title}</Link>\r\n                </h3>\r\n                <Link to={`/jobs/myjobs/applications/${job.job}`} type=\"button\" class=\"btn btn-success btn-lg margin-1\">\r\n                  see applications\r\n                </Link>\r\n                <Link\r\n                  to={`/jobs/myjobs/update-job/${job.job}`}\r\n                  type=\"button\"\r\n                  class=\"btn btn-secondary btn-lg margin-1\"\r\n                  onClick={() => getJob(job.job)}\r\n                >\r\n                  update job\r\n                </Link>\r\n                <button\r\n                  onClick={() => deleteJob(job.job)}\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger btn-lg margin-1\"\r\n                >\r\n                  delete job\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  loading: state.auth.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getJob, loadUser, deleteJob })(\r\n  MyJobs\r\n);\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateJob, getJob } from \"../../../actions/jobs\";\r\n\r\nconst initialState = {\r\n  description: \"\",\r\n  jobUrl: \"\",\r\n  jobRequirements: \"\",\r\n  expNeeded: \"\",\r\n  jobType: \"\",\r\n  numberOfVacancies: \"\",\r\n  salary: \"\",\r\n  locationOfTheJob: \"\",\r\n};\r\n\r\nconst EditJobForm = ({ updateJob, history, match, loading, job, getJob }) => {\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    if (job && job._id !== match.params.id) getJob(match.params.id);\r\n    if (!loading && job) {\r\n      const jobData = { ...initialState };\r\n      for (const key in job) {\r\n        if (key in jobData) jobData[key] = job[key];\r\n      }\r\n      if (Array.isArray(jobData.jobRequirements))\r\n        jobData.jobRequirements = jobData.jobRequirements.join(\", \");\r\n      setFormData(jobData);\r\n    }\r\n  }, [loading, getJob, job, match.params.id]);\r\n\r\n  const {\r\n    description,\r\n    jobUrl,\r\n    jobRequirements,\r\n    expNeeded,\r\n    jobType,\r\n    numberOfVacancies,\r\n    salary,\r\n    locationOfTheJob,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <h1 className=\"large text-primary\">update job</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-code-branch\" /> please fill in the following\r\n          inputs\r\n        </p>\r\n        <small>* = required field</small>\r\n        <hr />\r\n        <form\r\n          className=\"form\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            updateJob(match.params.id, formData, history);\r\n          }}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label>years of experience*</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"* years of experience needed\"\r\n              name=\"expNeeded\"\r\n              value={expNeeded}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">.eg more than 2 years</small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>job type*</label>\r\n            <select\r\n              class=\"form-control\"\r\n              name=\"jobType\"\r\n              value={jobType}\r\n              onChange={onChange}\r\n            >\r\n              <option>* select job type</option>\r\n              <option value=\"full time\">Full time</option>\r\n              <option value=\"part time\">part time</option>\r\n              <option value=\"work from home\">work from home</option>\r\n            </select>\r\n            <small className=\"form-text\">\r\n              * required, please choose the job Type\r\n            </small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>job url</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"job url...\"\r\n              name=\"jobUrl\"\r\n              value={jobUrl}\r\n              onChange={onChange}\r\n            />\r\n            <small className=\"form-text\">.eg www.orascom.com</small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>location of the job*</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"* location of the job\"\r\n              name=\"locationOfTheJob\"\r\n              value={locationOfTheJob}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">.eg nasr city, cairo</small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>number of vacancies*</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"number of vacancies...\"\r\n              name=\"numberOfVacancies\"\r\n              value={numberOfVacancies}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>salary</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"salary...\"\r\n              name=\"salary\"\r\n              value={salary}\r\n              onChange={onChange}\r\n            />\r\n            <small className=\"form-text\">.eg 8000 egp</small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>jobRequirements*</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"job requirements...\"\r\n              name=\"jobRequirements\"\r\n              value={jobRequirements}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n            <small className=\"form-text\">\r\n              you have to use '/' separated values (eg. good grasp on javascript\r\n              / hard worker / etc)\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>description*</label>\r\n            <textarea\r\n              name=\"description\"\r\n              className=\"form-control\"\r\n              cols=\"30\"\r\n              rows=\"5\"\r\n              placeholder=\"job description...\"\r\n              value={description}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary btn-lg m-1\" />\r\n          <Link className=\"btn btn-success btn-lg my-1\" to=\"/jobs\">\r\n            Go Back\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  job: state.job.job,\r\n  loading: state.job.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateJob, getJob })(EditJobForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {\r\n  getApplications,\r\n  putInConsideration,\r\n  notSelect,\r\n} from \"../../../actions/jobs\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Applications = ({\r\n  applications,\r\n  loading,\r\n  getApplications,\r\n  match,\r\n  putInConsideration,\r\n  history,\r\n  notSelect,\r\n}) => {\r\n  useEffect(() => {\r\n    getApplications(match.params.id);\r\n  }, [getApplications, match.params.id]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"user-profile p-1\">\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-profile p-1\">\r\n      <div className=\"container\">\r\n        <h1 className=\"large text-primary padd-1  text-center\">\r\n          all applications the job has recieved\r\n        </h1>\r\n\r\n        {applications.map((application) => {\r\n          let color = \"light\";\r\n          if (application.status === \"In consideration\") {\r\n            color = \"success\";\r\n          } else if (application.status === \"not selected\") {\r\n            color = \"danger\";\r\n          }\r\n          return (\r\n            <div key={application._id} className=\"profile-wrapper my-2\">\r\n              <div className=\"padd-1\">\r\n                <h3 className=\" margin-1\">\r\n                  applicant name:{\" \"}\r\n                  <Link\r\n                    to={`/jobs/myjobs/applications/user-info/${application.user}`}\r\n                  >\r\n                    {application.name}\r\n                  </Link>\r\n                </h3>\r\n                <h4 className=\"margin-1\">\r\n                  status:{\" \"}\r\n                  <span class={`badge badge-${color}`}>\r\n                    {\" \"}\r\n                    {application.status}\r\n                  </span>\r\n                </h4>\r\n                <Link\r\n                  to={`/jobs/myjobs/applications/user-info/${application.user}`}\r\n                  type=\"button\"\r\n                  class=\"btn btn-secondary btn-lg margin-1\"\r\n                >\r\n                  applicant profile\r\n                </Link>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-success btn-lg margin-1\"\r\n                  onClick={() =>\r\n                    putInConsideration(\r\n                      match.params.id,\r\n                      application._id,\r\n                      history\r\n                    )\r\n                  }\r\n                >\r\n                  put in consideration\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-danger btn-lg margin-1\"\r\n                  onClick={() =>\r\n                    notSelect(match.params.id, application._id, history)\r\n                  }\r\n                >\r\n                  not select applicant\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  applications: state.job.applications,\r\n  loading: state.job.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getApplications,\r\n  putInConsideration,\r\n  notSelect,\r\n})(Applications);\r\n","import React, { Fragment } from \"react\";\r\nimport { getUserProfileById } from \"../../../actions/profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nconst UserInfo = ({\r\n  userInfo,\r\n  getUserProfileById,\r\n  loading,\r\n  setAlert,\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    getUserProfileById(match.params.id);\r\n  }, [getUserProfileById, match.params.id]);\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div class=\"user-profile padd-2\">\r\n      <div class=\"container padd-2\">\r\n        {!loading && userInfo !== null ? (\r\n          <Fragment>\r\n            <div class=\"links py-2\">\r\n              <Link\r\n                to=\"/\"\r\n                type=\"button\"\r\n                class=\"btn btn-secondary btn-lg my-1 mx-2\"\r\n              >\r\n                back to applications\r\n              </Link>\r\n              <Link\r\n                to=\"/\"\r\n                type=\"button\"\r\n                class=\"btn btn-success my-1 btn-lg mx-2\"\r\n              >\r\n                put in consideration\r\n              </Link>\r\n              <Link\r\n                to=\"/profile/add-education\"\r\n                type=\"button\"\r\n                class=\"btn btn-danger btn-lg my-1 mx-2\"\r\n              >\r\n                not select applicant\r\n              </Link>\r\n            </div>\r\n\r\n            <div class=\"profile-wrapper shadow  my-2\">\r\n              <div class=\"p-4\">\r\n                <h2 class=\"text-center p-2\">main information</h2>\r\n                <h3>Title : {userInfo.title ? userInfo.title : \"\"}</h3>\r\n                <hr />\r\n                <h5>\r\n                  <strong> bio : </strong> {userInfo.bio ? userInfo.bio : \"\"}\r\n                </h5>\r\n                <hr />\r\n                <h4>location : {userInfo.location ? userInfo.location : \"\"}</h4>\r\n                <hr />\r\n                <h4>current employer : the awesome place</h4>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"profile-wrapper shadow  my-3\">\r\n              <div class=\"p-4\">\r\n                <h2 class=\"text-center p-2\">skills</h2>\r\n\r\n                <div class=\"w-75 mx-auto p-1\">\r\n                  {userInfo.skills.map((skill, index) => (\r\n                    <div key={index} className=\"p-1\">\r\n                      <i className=\"fas fa-check\" />\r\n                      {\"  \"}\r\n                      {skill}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"profile-wrapper shadow  my-3\">\r\n              <div class=\"p-4\">\r\n                <h2 class=\"text-center p-2\">Education</h2>\r\n                {userInfo.education.length > 0 ? (\r\n                  <Fragment>\r\n                    {userInfo.education.map((education) => (\r\n                      <div key={education._id}>\r\n                        <h3 className=\"text-dark\">{education.school}</h3>\r\n                        <p>\r\n                          <Moment format=\"YYYY/MM/DD\">\r\n                            {moment.utc(education.from)}\r\n                          </Moment>{\" \"}\r\n                          -{\" \"}\r\n                          {!education.to ? (\r\n                            \" Now\"\r\n                          ) : (\r\n                            <Moment format=\"YYYY/MM/DD\">\r\n                              {moment.utc(education.to)}\r\n                            </Moment>\r\n                          )}\r\n                        </p>\r\n                        <p>\r\n                          <strong>Degree: </strong> {education.degree}\r\n                        </p>\r\n                        <p>\r\n                          <strong>Field Of Study: </strong>{\" \"}\r\n                          {education.fieldofstudy}\r\n                        </p>\r\n                        <p>\r\n                          <strong>Description: </strong> {education.description}\r\n                        </p>\r\n                      </div>\r\n                    ))}\r\n                  </Fragment>\r\n                ) : (\r\n                  <h4>No education credentials</h4>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"profile-wrapper shadow  my-3\">\r\n              <div class=\"p-4\">\r\n                <h2 class=\"text-center p-2\">Experience</h2>\r\n                {userInfo.experience.length > 0 ? (\r\n                  <Fragment>\r\n                    {userInfo.experience.map((experience) => (\r\n                      <div key={experience._id}>\r\n                        <h3 style={{ color: \"#0d56d9\", opacity: \".6\" }}>\r\n                          {experience.company}\r\n                        </h3>\r\n                        <p>\r\n                          <Moment format=\"YYYY/MM/DD\">\r\n                            {moment.utc(experience.from)}\r\n                          </Moment>{\" \"}\r\n                          -{\" \"}\r\n                          {!experience.to ? (\r\n                            \" Now\"\r\n                          ) : (\r\n                            <Moment format=\"YYYY/MM/DD\">\r\n                              {moment.utc(experience.to)}\r\n                            </Moment>\r\n                          )}\r\n                        </p>\r\n                        <p>\r\n                          <strong>Position: </strong> {experience.title}\r\n                        </p>\r\n                        <p>\r\n                          <strong>Location: </strong> {experience.location}\r\n                        </p>\r\n                        <p>\r\n                          <strong>Description: </strong>{\" \"}\r\n                          {experience.description}\r\n                        </p>\r\n\r\n                        <hr />\r\n                      </div>\r\n                    ))}\r\n                  </Fragment>\r\n                ) : (\r\n                  <h4>No experience credentials</h4>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userInfo: state.profile.userInfo,\r\n  loading: state.profile.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getUserProfileById,\r\n  setAlert,\r\n})(UserInfo);\r\n","import React, { Fragment, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { loadUser } from \"./actions/auth\";\nimport \"./App.css\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Home from \"./components/layout/Home\";\nimport Jobs from \"./components/pages/jobs/Jobs\";\nimport UserProfile from \"./components/pages/profile/UserProfile\";\nimport MyApplications from \"./components/pages/applications/MyApplications\";\nimport store from \"./store\";\nimport Alert from \"./components/layout/Alert\";\nimport Login from \"./components/pages/auth/Login\";\nimport SignUpEmployer from \"./components/pages/auth/SignUpEmployer\";\nimport SignUpUser from \"./components/pages/auth/SignUpUser\";\nimport Job from \"./components/pages/jobs/Job\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport EmployerProfile from \"./components/pages/profile/EmployerProfile\";\nimport CompanyInfo from \"./components/pages/profile/CompanyInfo\";\nimport CreateEmployerProfileForm from \"./components/pages/profile/CreateEmployerProfileForm\";\nimport CreateUserProfileForm from \"./components/pages/profile/CreateUserProfileForm\";\n\nimport AddExperienceForm from \"./components/pages/profile/AddExperienceForm\";\nimport AddEducationForm from \"./components/pages/profile/AddEducationForm\";\nimport JobForm from \"./components/pages/jobs/JobForm\";\nimport MyJobs from \"./components/pages/jobs/MyJobs\";\nimport EditJobForm from \"./components/pages/jobs/EditJobForm\";\nimport Applications from \"./components/pages/jobs/Applications\";\nimport UserInfo from \"./components/pages/profile/UserInfo\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nfunction App() {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Alert />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/jobs\" exact component={Jobs} />\n            <Route path=\"/jobs/create-job\" exact component={JobForm} />\n            <Route path=\"/jobs/myjobs\" exact component={MyJobs} />\n            <Route\n              path=\"/jobs/myjobs/applications/user-info/:id\"\n              exact\n              component={UserInfo}\n            />\n            <Route\n              path=\"/jobs/myjobs/applications/:id\"\n              exact\n              component={Applications}\n            />\n            <Route\n              path=\"/jobs/myjobs/update-job/:id\"\n              exact\n              component={EditJobForm}\n            />\n            <Route path=\"/job/:id\" exact component={Job} />\n            <Route path=\"/company-info/:id\" exact component={CompanyInfo} />\n            <Route path=\"/profile\" exact component={UserProfile} />\n            <Route\n              path=\"/create-edit-user-profile\"\n              exact\n              component={CreateUserProfileForm}\n            />\n            <Route path=\"/my-applications\" exact component={MyApplications} />\n            <Route\n              path=\"/profile/add-education\"\n              exact\n              component={AddEducationForm}\n            />\n            <Route\n              path=\"/profile/add-experience\"\n              exact\n              component={AddExperienceForm}\n            />\n            <Route path=\"/emp-profile\" exact component={EmployerProfile} />\n            <Route\n              path=\"/create-edit-employer-profile\"\n              exact\n              component={CreateEmployerProfileForm}\n            />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/signup/employer\" exact component={SignUpEmployer} />\n            <Route path=\"/signup/user\" exact component={SignUpUser} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}